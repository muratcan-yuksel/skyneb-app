{"version":3,"sources":["features/liveOrdersComp2.js","components/SecondPart.js","features/orderBookComp1.js","components/firstPart.js","features/liveTradesComp3.js","components/thirdPart.js","components/lastPart.js","App.js","reportWebVitals.js","index.js"],"names":["liveOrders","createSlice","name","initialState","value","reducers","getData","state","action","payload","slice","actions","SecondPart","dispatch","useDispatch","orders","useSelector","ws","WebSocket","apiCall","event","data","channel","onopen","send","JSON","stringify","useEffect","onmessage","json","parse","err","console","log","close","mapPrices","map","item","order_type","className","price","uniqid","mapAmount","amount","mapDate","date","datetime","dateArr","Array","from","String","Number","splice","lastArr","join","style","color","orderBook","getOrderBookData","FirstPart","askObj","asks","props","bidObj","bids","bidProps","firstBids","toFixed","firstAsks","height","liveTrades","getTradesData","ThirdPart","stateObj","mapType","type","undefined","timestamp","LastPart","width","symbol","interval","timezone","theme","locale","toolbarBg","enablePublishing","allowSymbol_change","containerId","App","isTabletOrMobile","useMediaQuery","query","isDesktopOrLaptop","flexDirection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","liveOrdersReducer","orderBookReducer","liveTradesReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fae97ce1.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialStateValue = [0];\n\nexport const liveOrders = createSlice({\n  name: \"liveOrders\",\n  initialState: { value: initialStateValue },\n  reducers: {\n    getData: (state, action) => {\n      state.value = [action.payload, ...state.value.slice(0, 30)];\n    },\n  },\n});\n\nexport const { getData } = liveOrders.actions;\n\nexport default liveOrders.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport uniqid from \"uniqid\";\nimport \"../style/app.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getData, initialStateValue } from \"../features/liveOrdersComp2\";\n\nconst SecondPart = () => {\n  const dispatch = useDispatch();\n  const orders = useSelector((state) => state.liveOrders.value);\n\n  const ws = new WebSocket(\"wss://ws.bitstamp.net\");\n\n  const apiCall = {\n    event: \"bts:subscribe\",\n    data: { channel: \"live_orders_btcusd\" },\n  };\n\n  ws.onopen = (event) => {\n    ws.send(JSON.stringify(apiCall));\n  };\n\n  //clean up lest memory leaks\n  useEffect(() => {\n    ws.onmessage = function (event) {\n      const json = JSON.parse(event.data);\n      try {\n        if ((json.event = \"data\")) {\n          dispatch(getData(json.data));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    //clean up function\n    return () => ws.close();\n  }, []);\n\n  //map prices with dynamic colors\n  const mapPrices = orders.map((item) => {\n    if (item.order_type === 0) {\n      return (\n        <p key={uniqid()} className=\"green\">\n          {item.price}\n        </p>\n      );\n    } else if (item.order_type === 1) {\n      return (\n        <p key={uniqid()} className=\"red\">\n          {item.price}\n        </p>\n      );\n    }\n  });\n\n  const mapAmount = orders.map((item) => {\n    return (\n      <p key={uniqid()} className=\"white\">\n        {item.amount}\n      </p>\n    );\n  });\n\n  const mapDate = orders.map((item) => {\n    let date = item.datetime;\n    let dateArr = Array.from(String(date), Number);\n    dateArr.splice(2, 0, \":\");\n    dateArr.splice(5, 0, \":\");\n    dateArr.splice(-4);\n    let lastArr = dateArr.join(\"\");\n    return (\n      <p key={uniqid()} className=\"white\">\n        {lastArr}{\" \"}\n      </p>\n    );\n  });\n\n  return (\n    <div>\n      <h3>Piyasa Alım Satımları</h3>\n      <div className=\"flexing\">\n        <h4 style={{ color: \"grey\" }}>Fiyat(USDT)</h4>\n        <h4 style={{ color: \"grey\" }}>Miktar(BTC)</h4>\n        <h4 style={{ color: \"grey\" }}>Saat</h4>\n      </div>\n      <div className=\"flexing\">\n        <div>{mapPrices}</div>\n        <div>{mapAmount}</div>\n        <div>{mapDate}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default SecondPart;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialStateValue = [0];\n\nexport const orderBook = createSlice({\n  name: \"orderBook\",\n  initialState: { value: initialStateValue },\n  reducers: {\n    getOrderBookData: (state, action) => {\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const { getOrderBookData } = orderBook.actions;\n\nexport default orderBook.reducer;\n","import React, { useEffect } from \"react\";\nimport uniqid from \"uniqid\";\nimport \"../style/app.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getOrderBookData } from \"../features/orderBookComp1\";\n\nfunction FirstPart() {\n  const dispatch = useDispatch();\n  const orders = useSelector((state) => state.orderBook.value);\n  let askObj = orders.asks;\n  let asks = [];\n  for (let props in askObj) {\n    asks = [askObj[props], ...asks.slice(0, 15)];\n  }\n  let bidObj = orders.bids;\n  let bids = [];\n  for (let bidProps in bidObj) {\n    bids = [bidObj[bidProps], ...bids.slice(0, 15)];\n  }\n\n  const ws = new WebSocket(\"wss://ws.bitstamp.net\");\n\n  const apiCall = {\n    event: \"bts:subscribe\",\n    data: { channel: \"order_book_btcusd\" },\n  };\n\n  ws.onopen = (event) => {\n    ws.send(JSON.stringify(apiCall));\n  };\n  //clean up lest memory leaks\n  useEffect(() => {\n    ws.onmessage = function (event) {\n      const json = JSON.parse(event.data);\n      try {\n        if ((json.event = \"data\")) {\n          dispatch(getOrderBookData(json.data));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    //clean up function\n    return () => ws.close();\n  }, []);\n\n  //   //map the first 15 bids\n  const firstBids = bids.map((item) => {\n    return (\n      <div className=\"flexing\" key={uniqid()}>\n        <p className=\"green\"> {item[0]}</p>\n        <p className=\"white\"> {item[1]}</p>\n        <p className=\"white\"> {(item[0] * item[1]).toFixed(4)}</p>\n      </div>\n    );\n  });\n  //map the first 15 asks\n\n  const firstAsks = asks.map((item) => {\n    return (\n      <div className=\"flexing\" key={uniqid()}>\n        <p className=\"red\"> {item[0]}</p>\n        <p className=\"white\"> {item[1]}</p>\n        <p className=\"white\"> {(item[0] * item[1]).toFixed(4)}</p>\n      </div>\n    );\n  });\n\n  return (\n    <div style={{ height: \"500px\" }}>\n      <div>\n        <h1 className=\"white\">Asks</h1>\n        <div className=\"flexing\">\n          <h4 style={{ color: \"grey\" }}>Fiyat(USDT)</h4>\n          <h4 style={{ color: \"grey\" }}>Miktar(BTC)</h4>\n          <h4 style={{ color: \"grey\" }}>Toplam</h4>\n        </div>\n        {firstAsks}\n      </div>\n      <div>\n        <h1 className=\"white\">Bids</h1>\n        {firstBids}\n      </div>\n    </div>\n  );\n}\n\nexport default FirstPart;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialStateValue = [0];\n\nexport const liveTrades = createSlice({\n  name: \"liveTrades\",\n  initialState: { value: initialStateValue },\n  reducers: {\n    getTradesData: (state, action) => {\n      state.value = [action.payload, ...state.value];\n    },\n  },\n});\n\nexport const { getTradesData } = liveTrades.actions;\n\nexport default liveTrades.reducer;\n","import React, { useEffect } from \"react\";\nimport uniqid from \"uniqid\";\nimport \"../style/app.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTradesData } from \"../features/liveTradesComp3\";\n\nconst ThirdPart = () => {\n  const dispatch = useDispatch();\n\n  const orders = useSelector((state) => state.liveTrades.value);\n\n  let stateObj = orders;\n  let state = [];\n  for (let props in stateObj) {\n    state = [stateObj[props], ...state];\n  }\n\n  const ws = new WebSocket(\"wss://ws.bitstamp.net\");\n\n  const apiCall = {\n    event: \"bts:subscribe\",\n    data: { channel: \"live_trades_btcusd\" },\n  };\n\n  ws.onopen = (event) => {\n    ws.send(JSON.stringify(apiCall));\n  };\n\n  //clean up lest memory leaks\n  useEffect(() => {\n    ws.onmessage = function (event) {\n      const json = JSON.parse(event.data);\n      try {\n        if ((json.event = \"data\")) {\n          dispatch(getTradesData(json.data));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    //clean up function\n    return () => ws.close();\n  }, []);\n  //map type with dynamic colors\n  const mapType = state.map((item) => {\n    if (item.type === 0) {\n      return (\n        <p key={uniqid()} className=\"green\">\n          BUY(BTC)\n        </p>\n      );\n    } else if (item.type === 1) {\n      return (\n        <p key={uniqid()} className=\"red\">\n          SELL(BTC)\n        </p>\n      );\n    }\n  });\n\n  const mapPrices = state.map((item) => {\n    return (\n      <p key={uniqid()} className=\"white\">\n        {item.price}\n      </p>\n    );\n  });\n\n  const mapAmount = state.map((item) => {\n    return (\n      <p key={uniqid()} className=\"white\">\n        {item.amount}\n      </p>\n    );\n  });\n\n  let mapDate = state.map((item) => {\n    //this if statement solves the problem with getting a first NaN on the screen\n    if (item.timestamp !== undefined) {\n      let date = item.timestamp;\n      let dateArr = Array.from(String(date), Number);\n      dateArr.splice(2, 0, \":\");\n      dateArr.splice(5, 0, \":\");\n      dateArr.splice(-4);\n      let lastArr = dateArr.join(\"\");\n      return (\n        <p key={uniqid()} className=\"white\">\n          {lastArr}{\" \"}\n        </p>\n      );\n    }\n  });\n\n  return (\n    <div>\n      <div className=\"flexing\">\n        <h4 style={{ color: \"grey\" }}>Tür</h4>\n        <h4 style={{ color: \"grey\" }}>Fiyat</h4>\n        <h4 style={{ color: \"grey\" }}>Miktar</h4>\n        <h4 style={{ color: \"grey\" }}>Saat</h4>\n      </div>\n      <div className=\"flexing scrollable\">\n        <div>{mapType}</div>\n        <div>{mapPrices}</div>\n        <div>{mapAmount}</div>\n        <div>{mapDate}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ThirdPart;\n","import React from \"react\";\nimport TradingViewWidget from \"react-tradingview-widget\";\nimport \"../style/app.css\";\n\nconst LastPart = () => {\n  return (\n    <div>\n      <TradingViewWidget\n        width=\"500\"\n        height=\"300\"\n        symbol=\"BITSTAMP:BTCUSD \"\n        interval=\"5\"\n        timezone=\"Etc/UTC\"\n        theme=\"dark\"\n        style=\"1\"\n        locale=\"en\"\n        toolbarBg=\"#f1f3f6\"\n        enablePublishing=\"false\"\n        allowSymbol_change=\"true\"\n        containerId=\"tradingview_e4a85\"\n      />\n    </div>\n  );\n};\n\nexport default LastPart;\n","import \"./style/app.css\";\nimport SecondPart from \"./components/SecondPart\";\nimport FirstPart from \"./components/firstPart\";\nimport ThirdPart from \"./components/thirdPart\";\nimport LastPart from \"./components/lastPart\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction App() {\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  return (\n    <div className=\"App\">\n      {isDesktopOrLaptop && (\n        <div className=\"splitScreen\">\n          <div className=\"topPane\">\n            <FirstPart />\n          </div>\n          <div className=\"secondPane\">\n            <SecondPart />\n          </div>\n          <div className=\"middlePane\">\n            <LastPart />\n            <ThirdPart />\n          </div>\n        </div>\n      )}\n      {isTabletOrMobile && (\n        <div style={({ display: \"flex\" }, { flexDirection: \"column\" })}>\n          <FirstPart />\n          <LastPart />\n          <SecondPart />\n          <ThirdPart />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/app.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport liveOrdersReducer from \"./features/liveOrdersComp2\";\nimport orderBookReducer from \"./features/orderBookComp1\";\nimport liveTradesReducer from \"./features/liveTradesComp3\";\n\nconst store = configureStore({\n  reducer: {\n    liveOrders: liveOrdersReducer,\n    orderBook: orderBookReducer,\n    liveTrades: liveTradesReducer,\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}